#! /usr/bin/env python
# encoding: utf-8
#*********************************************************************
# Copyright 2010, Institute of Computer and Network Engineering,
#                 TU-Braunschweig
# All rights reserved
# Any reproduction, use, distribution or disclosure of this program,
# without the express, prior written consent of the authors is 
# strictly prohibited.
#
# University of Technology Braunschweig
# Institute of Computer and Network Engineering
# Hans-Sommer-Str. 66
# 38118 Braunschweig, Germany
#
# ESA SPECIAL LICENSE
#
# This program may be freely used, copied, modified, and redistributed
# by the European Space Agency for the Agency's own requirements.
#
# The program is provided "as is", there is no warranty that
# the program is correct or suitable for any purpose,
# neither implicit nor explicit. The program and the information in it
# contained do not necessarily reflect the policy of the European 
# Space Agency or of TU-Braunschweig.
#*********************************************************************
# Title:      wscript
#
# ScssId:
#
# Origin:     HW-SW SystemC Co-Simulation SoC Validation Platform
#
# Purpose:    this file contains the build system for global tests
#
# Method:     $ ./waf configure; ./waf # to build it on top level
#
# Modified on $Date: 2011-06-07 10:41:59 +0200 (Tue, 07 Jun 2011) $
#          at $Revision: 446 $
#          by $Author: HWSWSIM $
#
# Principal:  European Space Agency
# Author:     VLSI working group @ IDA @ TUBS
# Maintainer: Rolf Meyer
# Reviewed:
#*********************************************************************
top = '../..'

def build(bld):
  # hello.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'hello.sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     source       = ['hello.c'],
  )

  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'hello.sparc',
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.at.platform',
      rom         = 'singlecore.at.prom',
      ram         = 'hello.sparc',
  )
  
  # cache.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'cache.sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     source       = ['top_cache_test.c',
                     'ramfill.c', 
                     'standalone.c', 
                     'standaloneasm.S', 
                     'cacheasm.S', 
                     'cache.c'],
  )
  """
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'cache.sparc',
  )
  """

  """
  # gptimer.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'gptimer.sparc',
     source       = ['top_gptimer_test.c',
                     'ramfill.c', 
                     'standalone.c', 
                     'standaloneasm.S',
                     'irqmp.c',
                     'gptimer.c',
                     'cacheasm.S', 
                     'cache.c'],
  )
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'gptimer.sparc',
  )
  """

  
  # irqmp.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'irqmp.sparc',
     source       = ['top_irqmp_test.c',
                     'ramfill.c', 
                     'standalone.c', 
                     'standaloneasm.S',
                     'irqmp.c', 
                     'cacheasm.S', 
                     'cache.c'],
  )
  """
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'irqmp.sparc',
  )
  """

  # ram.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'ram.sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     source       = ['top_ram_test.c',
                     'ramfill.c', 
                     'standaloneasm.S', 
                     'standalone.c', 
                     'ramtest.c',
                     'cacheasm.S',
                     'cache.c'],
  )
  """
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'ram.sparc',
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.at.platform',
      rom         = 'singlecore.at.prom',
      ram         = 'ram.sparc',
  )
  """
  # reg.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'reg.sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     source       = ['top_reg_test.c',
                     'ramfill.c', 
                     'standaloneasm.S', 
                     'standalone.c', 
                     'regtest.S',
                     'cacheasm.S',
                     'cache.c'],
  )
  """
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'reg.sparc',
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.at.platform',
      rom         = 'singlecore.at.prom',
      ram         = 'reg.sparc',
  )
  """
  # mmu.sparc
  bld(
     features     = 'c cprogram sparc',
     target       = 'mmu.sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     source       = ['top_mmu_test.c',
                     'ramfill.c', 
                     'standalone.c', 
                     'standaloneasm.S', 
                     'mmu.c',
                     'mmu_asm.S',
                     'cacheasm.S',
                     'cache.c'],
  )
  """
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'mmu.sparc',
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.at.platform',
      rom         = 'singlecore.at.prom',
      ram         = 'mmu.sparc',
  )
  """
  # readpnp.sparc
  bld(
     features     = 'c cprogram sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     target       = 'readpnp.sparc',
     source       = ['readpnp.c'],
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'readpnp.sparc',
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.at.platform',
      rom         = 'singlecore.at.prom',
      ram         = 'readpnp.sparc',
  )
  
  # argstests.sparc
  bld(
     features     = 'c cprogram sparc',
     cflags       = '-static -g -O1 -lm -mno-fpu',
     linkflags    = '-static -g -O1 -lm -mno-fpu',
     target       = 'argstest.sparc',
     source       = ['top_args_test.c'],
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.lt.platform',
      rom         = 'singlecore.lt.prom',
      ram         = 'argstest.sparc',
      args        = 'one two three four'
  )
  
  bld(
      features    = 'systest',
      system      = 'singlecore.at.platform',
      rom         = 'singlecore.at.prom',
      ram         = 'argstest.sparc',
      args        = ['one', 'two', 'three', 'four']
  )
  

